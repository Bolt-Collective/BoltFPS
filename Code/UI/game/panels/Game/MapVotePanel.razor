@using Sandbox;
@using Sandbox.UI;
@inherits PanelComponent
@namespace Seekers



<root style="@(MapVoteManager.Instance.Voting ? "" : "background-color: transparent")">
	@if (!MapVoteManager.Instance.Voting)
		return;
	<div class="map-selection">
		<PackageList style="color: white" ShowFilters="@false" Query="type:map +prophunt sort:trending"
		             OnSelected="@OnPackageSelected" Take=@( 50 )/>
		<div class="voted-maps">
			@foreach ( var voted in MapVoteManager.Instance?.Votes! )
			{
				var package = Package.Fetch( voted.Value, true ).Result;
				<div class="card card-vertical card-package">

					<div class="card-image" style="background-image: url( @package.Thumb )">

						<div class="hover-overlay">
							@if ( package.VideoThumb != null )
							{
								<div class="thumb-video" style="background-image: url( @package.VideoThumb )"></div>
							}
							else
							{
							}
						</div>

					</div>

					<div class="package-card-body">
						<label class="title">@package.Title</label>
					</div>

				</div>
			}
		</div>
	</div>
</root>

@code
{
	void OnPackageSelected( Package package )
	{
		MapVoteManager.Instance?.AddVote( Client.Local, package.FullIdent );
	}

	/// <summary>
	/// the hash determines if the system should be rebuilt. If it changes, it will be rebuilt
	/// </summary>
	protected override int BuildHash() => System.HashCode.Combine( RealTime.Now );
}
