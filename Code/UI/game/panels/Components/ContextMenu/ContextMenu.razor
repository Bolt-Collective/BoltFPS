@using System;
@using Sandbox;
@using Sandbox.UI;

@namespace Seekers
@inherits Popup

<root>
	@foreach ( var entry in Entries )
	{
		<div class="menu-item" @onclick=@(() => ExecuteAndClose( entry.Action ))>
			<p>@entry.Text</p>
		</div>
	}
</root>

@code
{
	public struct Entry( string text, Action action )
	{
		public string Text = text;
		public Action Action = action;
	}

	public List<Entry> Entries { get; set; } = new();

	public static ContextMenu Open( Panel parent, Vector2 position, List<Entry> entries )
	{
		var menu = parent.AddChild<ContextMenu>();
		menu.Entries = entries;
		menu.SetPositioning( parent, Popup.PositionMode.UnderMouse, 0 );
		menu.Style.ZIndex = 1000;
		return menu;
	}

	private void ExecuteAndClose( Action action )
	{
		action?.Invoke();
		Delete();
	}

	protected override void OnMouseDown( MousePanelEvent e )
	{
		base.OnMouseDown( e );
		if ( !e.Target.HasClass( "menu-item" ) )
		{
			Delete();
		}
	}

	public override void Tick()
	{
		base.Tick();

		if ( FindRootPanel().ChildrenOfType<ContextMenu>().Count() > 1 )
		{
			Delete();
		}
	}
}
